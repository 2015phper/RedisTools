<?php

namespace RedisTools\Utils;

/**
 * Test class for Reflection.
 * Generated by PHPUnit on 2011-04-08 at 23:21:30.
 */
class ReflectionTest extends \PHPUnit_Framework_TestCase
{

	/**
	 * @var Reflection
	 */
	protected $object;

	protected $testDummy;
	
	protected function setUp()
	{
		$this->testDummy = new ReflectionDummy();
		$this->object = new Reflection($this->testDummy);
	}

	public function testGetObject()
	{
		$this->assertEquals($this->testDummy, $this->object->getObject());
	}

	public function testSetObject()
	{
		$object = new \stdClass();
		$this->object->setObject($object);
		$this->assertEquals($object, $this->object->getObject());
	}
	
	/**
	 * @expectedException \RedisTools\Exception
	 */
	public function testInflectionOnNonObject()
	{
		$reflection = new Reflection();
		$reflection->getObject();
	}

	public function testGetRedisToolsPropertiesArray()
	{
		$properties = $this->object->getRedisToolsProperties();
		$this->assertInternalType('array', $properties);
	}
	
	public function testGetRedisToolsPropertiesContainsProperties()
	{
		$this->assertGreaterThan(0, 
			count($this->object->getRedisToolsProperties())
		);
	}
	
	public function testGetRedisToolsPropertiesOnlyReturnsRedisToolsProperties()
	{
		$properties = $this->object->getRedisToolsProperties();
		foreach ($properties as $property)
		{
			$this->assertType('\RedisTools\Utils\Reflection\Property', $property);
			$this->assertFalse( strstr( $property->getName(), 'No') );
			$this->assertContains( 'Property', $property->getName() );
			$this->assertGreaterThan(0, count($property->getOptions()));
		}
	}

}

?>
